'''
Application 4: Build a Desktop Database App:

1)A program that stores this book information:
Title, Author, Year, ISBN

2)User can:
View all records, search an entry, add an entry, update entry, delete, close

My opinion of this project:
About only 1% of websites are run using Python. Using HTML, CSS, JS, PHP is way easier.
I can see why web development is not common in Python.
Therefore, I am glad I did this project but it is probably wise to instead use other langauges for this..
Here is my "Amazon" site that I wrote using PHP, JS, HTML, etc:
https://github.com/ScottFrederickSchmidt/Amazon-like-site
'''
import sqlite3 
  
connection = sqlite3.connect("myTable.db") 
# cursor  
crsr = connection.cursor() 

from tkinter import *
window=Tk()

#Create a Label widget with "KG as label":
e1=Label(window, text="Title")
e1.grid(row=0, column=0)

e2=Label(window, text="Author")
e2.grid(row=0, column=1)

e3=Label(window, text="Year")
e3.grid(row=1, column=0)

e4=Label(window, text="ISBN")
e4.grid(row=1, column=2)

author_text=StringVar()
e1=Entry(window, textvariable=author_text)
e1.grid(row=1, column=0)

year_text=StringVar()
e1=Entry(window, textvariable=year_text)
e1.grid(row=1, column=1)

isbn_text=StringVar()
e4=Entry(window, textvariable=isbn_text)
e4.grid(row=1, column=3)

list1=Listbox(window, height=6, width=35)
list1.grid(row=2, column=0, rowspan=6, columnspan=2)

sb1=Scrollbar(window)
sb1.grid(row=1, column=3)

list1.configure(yscrollcommand=sb1.set)
sb1.configure(command=list1.yview)

#get row
def get_selected_row(event):
    try:
        global selected_tuple
        index=list1.curselection()[0]
        selected_tuple=list1.get(index)
        el1.delete(0, END)
        el1.insert(selected_tuple[1])
        el2.delete(0, END)
        el2.insert(selected_tuple[2])
        el3.delete(0, END)
        el3.insert(selected_tuple[3])
        el4.delete(0, END)
        el4.insert(selected_tuple[4])
    except IndexError:
        pass

#view
def view_command():
    list1.delete(0, END)
    for row in backend.view():
        list1.insert(END, row)

#search
def search_command():
    list1.delete(0, END)
    for row in backend.search(title_text.get(), author_text.get(),year_text.get(), isbn_text.get()):
        list1.insert(END, row)

#update
def add_command():
    backend.insert(title_text.get(), author_text.get(), year_text.get(), isbn_text.get())
    list1.delete(0, END)
    list1.insert(END, (title_text.get(), author_text.get(), year_text.get(),isbn_text.get() ))

#delete
def delete_command(id):
    backend.delete(selected_tuple[0])

def update_command():
    backend.update(selected_tuple[0], selected_tuple[1], selected_tuple[2], selected_tuple[3], selected_tuple[4])
    
b1=Button(window, text="view all", width=12, command=view_command)
b1.grid(row=2, column=3)

b2=Button(window, text="search entry", width=12, command=search_command)
b2.grid(row=3, column=3)

b3=Button(window, text="Add entry", width=12, command=add_command)
b3.grid(row=3, column=3)

b4=Button(window, text="Updated selected", width=12, command=update_command)
b4.grid(row=5, column=3)

b5=Button(window, text="Delete selected", width=12, command=delete_command)
b5.grid(row=6, column=3)

b6=Button(window, text="Close", width=12, command=window.destroy)
b6.grid(row=7, column=3)

window.mainloop()
